@include describe("The _element function") {


    $_bem-current-context: () !global;

    @include it("should generate a selector for the block element") {
        @include block('block', 'object') {
            @include should( expect( #{_element('element')} ), to( be( '.o-block__element' )));
        }
    }


    $_bem-current-context: () !global;

    @include it("should generate multiple selectors for the block element") {
        @include block('block', 'object') {
            @include should( expect( #{_element('element1' , 'element')} ), to( be( '.o-block__element1, .o-block__element' )));
        }
    }


    $_bem-current-context: () !global;

    @include it("should return false or throw error if element is created within another element") {
        @include block('block', 'object') {
            @include element('element1') {
                @include should( expect( _element('element') ), to( be( false )));
            }
        }
    }


    $_bem-current-context: () !global;

    @include it("should return false or throw error if element is created within a modifier") {
        @include block('block', 'object') {
            @include modifier('modifier') {
                @include should( expect( _element('element') ), to( be( false )));
            }
        }
    }


    $_bem-current-context: () !global;

    @include it("should return false or throw error if element is created within a state") {
        @include block('block', 'object') {
            @include state('state') {
                @include should( expect( _element('element') ), to( be( false )));
            }
        }
    }

}
