// check dependencies

$wocss-tools-bem-constructor: false !default;
$wocss-tools-mq: false !default;


@if ($wocss-tools-bem-constructor == false) {
  @error "[wocss-utilities-widths] Have you included the wocss-tools-bem-constructor module?"
};

@if ($wocss-tools-mq == false) {
  @error "[wocss-utilities-widths] Have you included the wocss-tools-mq module?"
};





/*------------------------------------*\
  #WIDTHS
\*------------------------------------*/

$wocss-widths-cols-number: 12 !default;
$wocss-widths-delimiter: '\\/' !default;
$_utility-namespace: if($bem-use-namespaces, map-get($bem-block-namespaces, 'utility') + '-', '');
$_suffix-namespace: if($bem-use-namespaces, $bem-suffix-namespace, '');





@for $col-number from 1 through $wocss-widths-cols-number {

  .#{$_utility-namespace + $col-number + $wocss-widths-delimiter + $wocss-widths-cols-number} {
    flex: none;
    width: ($col-number / $wocss-widths-cols-number) * 100%;
  }
}

@each $breakpoint-key, $breakpoint-value in $wocss-breakpoints {

  @for $col-number from 1 through $wocss-widths-cols-number {

    .#{$_utility-namespace + $col-number + $wocss-widths-delimiter + $wocss-widths-cols-number + $_suffix-namespace + $breakpoint-key} {
      @include mq($from: $breakpoint-value) {
        flex: none;
        width: ($col-number / $wocss-widths-cols-number) * 100%;
      }
    }
  }
}
