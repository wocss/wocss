/*------------------------------------*\
  #Cols
\*------------------------------------*/

// Here we set a variable assuming that spaces settings, bem-constructor and
// breakpoints tools are not set globally. If they have been previously been defined,
// the following variables will be overriden and will be set to `true`.

$wocss-settings-spaces: false !default;
$wocss-tools-bem-constructor: false !default;
$wocss-tools-breakpoints: false !default;

@if ($wocss-settings-spaces == false) {
  @warn "Oops! Have you included the wocss-settings-spaces module?"
};

@if ($wocss-tools-bem-constructor == false) {
  @warn "Oops! Have you included the wocss-tools-bem-constructor module?"
};

@if ($wocss-tools-breakpoints == false) {
  @warn "Oops! Have you included the wocss-tools-breakpoints module?"
};





// variables

$cols-object-number: 12 !default;

// $spaces variable list from wocss-settings-spaces

$cols-object-gutters: $spaces !default;

// $breakpoints variable list from wocss-settings-breakpoints

$cols-object-breakpoints: $breakpoints !default;





/**
 * [1] make negative margins work properly
 */

@include object('cols') {
  align-items: flex-start;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin: 0;
  width: auto; // [1]

  @include modifier('stretch') {
    align-items: stretch;

    @include modifies-element('col') {
      display: flex;
    }
  }

  @include modifier('middle') {
    align-items: center;
  }

  @each $gutter-key, $gutter-value in $cols-object-gutters {
    @include modifier('gutter-' + $gutter-key) {
      margin: ($gutter-value / -2);

      @include modifies-element('col') {
        padding: ($gutter-value / 2);
      }
    }
  }

  @include element('col') {
    flex: 1 1 0;
    min-height: 0;
    min-width: 0;
    padding: 0;
    width: auto;

    @include modifier('auto') {
      flex: 1 1 auto;
      width: auto;
    }

    @include modifier('fit') {
      flex: 1 1 0;
    }

    @for $col-number from 1 through $cols-object-number {
      @include modifier($col-number) {
        flex: none;
        width: ($col-number / $cols-object-number) * 100%;
      }
    }

    @each $breakpoint-key, $breakpoint-value in $cols-object-breakpoints {
      @for $col-number from 1 through $cols-object-number {
        @include modifier('auto') {
          @include suffix($breakpoint-key) {
            @include desde($breakpoint-value) {
              flex: 1 1 auto;
              width: auto;
            }
          }
        }

        @include modifier('fit') {
          @include suffix($breakpoint-key) {
            @include desde($breakpoint-value) {
              flex: 1 1 0;
            }
          }
        }

        @include modifier($col-number) {
          @include suffix($breakpoint-key) {
            @include desde($breakpoint-value) {
              flex: none;
              width: ($col-number / $cols-object-number) * 100%;
            }
          }
        }
      }
    }
  }
}
